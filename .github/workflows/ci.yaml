name: CI

on:
  push:
    branches:
    - "*"
    - "!gh-pages"
    tags:
    - "*"
  pull_request:
    branches:
    - "*"
    - "!gh-pages"

jobs:
  test:
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-dotnet@v3
      with:
        global-json-file: ./global.json
    - uses: microsoft/setup-msbuild@v1.1
      with:
        vs-version: "17.0"
    - run: dotnet tool install --global dotnet-format --version 5.1.250801
    - working-directory: Authgear.Xamarin
      run: |
        dotnet restore Authgear.Xamarin.csproj
        dotnet format --verify-no-changes
        msbuild Authgear.Xamarin.csproj
    - working-directory: Authgear.Maui
      run: |
        dotnet workload install maui
        dotnet restore Authgear.Maui.csproj
        dotnet format --verify-no-changes
        msbuild Authgear.Maui.csproj
    - run: dotnet test UnitTest/UnitTest.csproj
  deploy:
    runs-on: windows-2022
    needs: ["test"]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - uses: actions/checkout@v3
    - uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: install docfx
    - working-directory: Documentation
      run: docfx docfx.json
    - name: Deploy docs to gh-pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: Documentation/_site
  pack-xamarin:
    runs-on: windows-2022
    needs: ["test"]
    if: startsWith(github.ref, 'refs/tags') && !startsWith(github.ref, 'refs/tags/staging-')
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-dotnet@v3
      with:
        global-json-file: ./global.json
    - uses: microsoft/setup-msbuild@v1.1
      with:
        vs-version: "17.0"
    - run: dotnet restore Authgear.Xamarin/Authgear.Xamarin.csproj
    - run: msbuild Authgear.Xamarin/Authgear.Xamarin.csproj /t:pack /p:Configuration=Release
    - uses: actions/upload-artifact@v3
      with:
        name: nupkg
        path: Authgear.Xamarin/bin/Release/Authgear.Xamarin.*.nupkg
        retention-days: 5
  pack-maui:
    runs-on: windows-2022
    needs: ["test"]
    if: startsWith(github.ref, 'refs/tags') && !startsWith(github.ref, 'refs/tags/staging-')
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-dotnet@v3
      with:
        global-json-file: ./global.json
    - uses: microsoft/setup-msbuild@v1.1
      with:
        vs-version: "17.0"
    - run: dotnet workload restore Authgear.Maui/Authgear.Maui.csproj
    - run: dotnet restore Authgear.Maui/Authgear.Maui.csproj
    - run: msbuild Authgear.Maui/Authgear.Maui.csproj /t:pack /p:Configuration=Release
    - uses: actions/upload-artifact@v3
      with:
        name: nupkg
        path: Authgear.Maui/bin/Release/Authgear.Maui.*.nupkg
        retention-days: 5
  xamarin_ios:
    runs-on: macos-12
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: "18.x"
    - uses: actions/setup-dotnet@v3
      with:
        global-json-file: ./global.json
    # `select-xamarin-sdk-v2.sh --mono` set /Library/Frameworks/Mono.framework/Versions/Current
    # Tools like `msbuild`, `nuget` comes from /Library/Frameworks/Mono.framework/Versions/Current/Commands/
    - run: npm install -g appcenter-cli
    - name: Set Xamarin SDK versions
      run: |
        # https://github.com/actions/runner-images/blob/main/images/macos/macos-12-Readme.md
        $VM_ASSETS/select-xamarin-sdk-v2.sh --mono=6.12 --ios=16.2
    - run: sudo xcode-select -s /Applications/Xcode_14.2.app/Contents/Developer
    - name: nuget restore
      run: |
        nuget restore ./Authgear.Xamarin/Authgear.Xamarin.csproj
        nuget restore ./XamarinFormSample/XamarinFormSample/XamarinFormSample.csproj
        nuget restore ./XamarinFormSample/XamarinFormSample.iOS/XamarinFormSample.iOS.csproj
    - name: Install the Apple certificate and provisioning profile
      env:
        IOS_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
        IOS_PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
      run: |
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        echo -n "$IOS_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
        echo -n "$IOS_PROVISIONING_PROFILE_BASE64" | base64 --decode -o $PP_PATH

        security create-keychain -p "" $KEYCHAIN_PATH
        security set-keychain-settings $KEYCHAIN_PATH
        security unlock-keychain -p "" $KEYCHAIN_PATH

        security import $CERTIFICATE_PATH -P "" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
    - name: Set CFBundleVersion
      run: |
        BUILD_NUMBER=$(date +%s)
        /usr/libexec/Plistbuddy -c "Set CFBundleVersion $BUILD_NUMBER" ./XamarinFormSample/XamarinFormSample.iOS/Info.plist
    - name: msbuild
      run: msbuild ./XamarinFormSample/XamarinFormSample.iOS/XamarinFormSample.iOS.csproj /p:Configuration=Release /p:Platform=iPhone /p:BuildIpa=true /t:Rebuild /p:IpaPackageDir="$RUNNER_TEMP"
    - name: Distribute to App Center
      env:
        APPCENTER_ACCESS_TOKEN: ${{ secrets.IOS_APPCENTER_ACCESS_TOKEN }}
      run: appcenter distribute release --debug --silent --file "$RUNNER_TEMP/XamarinFormSample.iOS.ipa" --store "App Store Connect Users" --app "Oursky/Authgear-Demo-Xamarin-iOS" --release-notes "no release notes"
    - name: Clean up keychain and provisioning profile
      if: ${{ always() }}
      run: |
        security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
        rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
