name: CI

on:
  push:
    branches:
      - "*"
      - "!gh-pages"
    tags:
      - "*"
  pull_request:
    branches:
      - "*"
      - "!gh-pages"

jobs:
  deploy:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "6.0.305"
      - uses: microsoft/setup-msbuild@v1.1
        with:
          vs-version: "17.0"
      - run: dotnet tool install --global dotnet-format --version 5.1.250801
      - working-directory: Authgear.Xamarin
        run: |
          dotnet restore Authgear.Xamarin.csproj
          dotnet format --verify-no-changes
          msbuild Authgear.Xamarin.csproj
      - run: dotnet test UnitTest/UnitTest.csproj
      - uses: crazy-max/ghaction-chocolatey@v1
        with:
          args: install docfx
        if: ${{ github.ref == 'refs/heads/main' }}
      - working-directory: Documentation
        run: docfx docfx.json
        if: ${{ github.ref == 'refs/heads/main' }}
      - name: Deploy docs to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: Documentation/_site
  pack:
    runs-on: windows-2022
    needs: ["deploy"]
    if: startsWith(github.ref, 'refs/tags') && !startsWith(github.ref, 'refs/tags/staging-')
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "5.0.x"
      - uses: microsoft/setup-msbuild@v1.1
        with:
          vs-version: "17.0"
      - run: dotnet restore
      - run: msbuild Authgear.Xamarin/Authgear.Xamarin.csproj /t:pack /p:Configuration=Release
      - uses: actions/upload-artifact@v3
        with:
          name: nupkg
          path: Authgear.Xamarin/bin/Release/Authgear.Xamarin.*.nupkg
          retention-days: 5
